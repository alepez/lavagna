name: ci
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - main
  schedule:
  - cron: '00 01 * * *'
jobs:
  test:
    name: test

    env:
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: "-C debuginfo=0 --deny warnings"
      OPTIONS: ${{ matrix.platform.options }}
      FEATURES: ${{ format(',{0}', matrix.platform.features ) }}
      CMD: ${{ matrix.platform.cmd }}

    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        # We test lavagna on a pinned version of Rust, along with the moving
        # targets of 'stable', 'beta', 'nightly'.
        rust_version:
          - 1.61.0
          - stable
          - beta
          - nightly
        platform:
          # - { target: x86_64-pc-windows-msvc,   os: windows-latest,  }
          # - { target: i686-pc-windows-msvc,     os: windows-latest,  }
          # - { target: x86_64-pc-windows-gnu,    os: windows-latest, host: -x86_64-pc-windows-gnu }
          # - { target: i686-pc-windows-gnu,      os: windows-latest, host: -i686-pc-windows-gnu }
          # - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest,   }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, options: --no-default-features, features: x11 }
          # - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, options: --no-default-features, features: "wayland,wayland-dlopen" }
          # - { target: aarch64-linux-android,    os: ubuntu-latest,  cmd: 'apk --' }
          # - { target: x86_64-apple-darwin,      os: macos-latest,    }
          # - { target: x86_64-apple-ios,         os: macos-latest,    }
          # - { target: aarch64-apple-ios,        os: macos-latest,    }
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache cargo folder
      uses: actions/cache@v1
      with:
        path: ~/.cargo
        key: ${{ matrix.platform.target }}-cargo-${{ matrix.rust_version }}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust_version }}
        profile: minimal
        override: true
        components: clippy, rustfmt

    - name: Build tests
      shell: bash
      run: cargo $CMD test --no-run --verbose --target ${{ matrix.platform.target }} $OPTIONS --features $FEATURES

    - name: Run tests
      shell: bash
      if: (
        !contains(matrix.platform.target, 'android') &&
        !contains(matrix.platform.target, 'ios') &&
        !contains(matrix.platform.target, 'wasm32'))
      run: cargo $CMD test --verbose --target ${{ matrix.platform.target }} $OPTIONS --features $FEATURES

    - name: Build lavagna and all crates
      run: cargo build --verbose --workspace

    - name: Lint with clippy
      shell: bash
      if: (matrix.rust_version == '1.61.0') && !contains(matrix.platform.options, '--no-default-features')
      run: cargo clippy --all-targets --target ${{ matrix.platform.target }} $OPTIONS --features $FEATURES -- -Dwarnings

